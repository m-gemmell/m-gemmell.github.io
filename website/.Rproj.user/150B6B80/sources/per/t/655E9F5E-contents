# Trim the PCR primer sequences {#pcrtrim}
```{r, fig.align = 'center',out.width= '20%', echo=FALSE }
knitr::include_graphics(path = "figures/prepare.png", auto_pdf = TRUE)
``` 

Reads are paired-end (R1 and R2) and may overlap in the middle, depending on the size of the sequenced amplicon and the size of the paired reads. Our sequencing data is of the 16S rRNA V4 region (length: ~250bp). Therefore, our 250bp x 2 paired end reads should overlap. If R1 and R2 overlap, we can use this to reconstruct the V4 region by aligning and merging the forward and reverse reads of each pair.

However, before we carry this out we will need to remove any sequence data that is not biologically relevant. This includes the primer sequences that were used in the Illumina sequencing.

## Cutadapt: run
```{r, fig.align = 'center',out.width= '15%', echo=FALSE }
knitr::include_graphics(path = "figures/play_black.png", auto_pdf = TRUE)
``` 

We will use the “cutadapt” (Martin, 2011) tool to remove the PCR primer sequences from R1 and R2.

__Note__: You can copy and paste (using right click) the forward and reverse primer from the fasta file "primers_seqs.fasta"

```{bash, eval=FALSE}
#Print primer sequences to screen for copying and poasting
cat primers_seqs.fasta

#Run cutadapt comman
qiime cutadapt trim-paired \
--i-demultiplexed-sequences paired-end-demux.qza \
--p-front-f NNNNNGTGCCAGCMGCCGCGGTAA \
--p-front-r GGACTACHVGGGTWTCTAAT \
--o-trimmed-sequences paired-end-demux.trim.qza
```

#### Parameters {-}
```{r, fig.align = 'center',out.width= '10%', echo=FALSE }
knitr::include_graphics(path = "figures/parameter_black.png", auto_pdf = TRUE)
```

- __`--i-demultiplexed-sequences`__: The input demultiplexed sequence artifact.
- __`--p-front-f`__: Sequence for the forward primer (`f`). The sequence is ligated to the 5 prime end (`front`), this is the normal. 
- __`--p-front-r`__: Sequence for the reverse primer (`r``). The sequence is ligated to the 5 prime end (`front`), this is the normal. 
- __`--o-trimmed-sequences`__: The output artifact containing the trimmed sequence data.

[QIIME2 docs on `qiime cutadapt trim-paired`](https://docs.qiime2.org/2022.2/plugins/available/cutadapt/trim-paired/)

## Cutadapt: visualise
```{r, fig.align = 'center',out.width= '15%', echo=FALSE }
knitr::include_graphics(path = "figures/eye_brown.png", auto_pdf = TRUE)
``` 

To visualise information on the trimmed samples, the following command will create a visualisation artifact associated with the main sample artefact. This is the same visualisation command as in [chapter 7](#chap7_vis) with different a different input and output.

```{bash, eval=FALSE}
qiime demux summarize \
--i-data paired-end-demux.trim.qza \
--o-visualization paired-end-demux.trim.qzv
```

[QIIME2 docs on `qiime demux summarize`](https://docs.qiime2.org/2022.2/plugins/available/demux/summarize/)

Now load the obtained `paired-end-demux.trim.qzv` into the ‘view.qiime2.org’ website.

__Remember to use the same chrome window!__ You can click the QIIME2 view logo on the top right of the previous `paired-end-demux.qzv` page and click "leave" on the "Do you want to leave this site?" pop-up. Now you will be on the QIIME2 view homepage.

This visualisation contains the same sections as [`paired-end-demux.qzv`](#chap7output) but contains information on the PCR trimmed data.

If you are working with the ITS region, to trim off the conserved regions from the sequences you can use the ‘q2-itxpress’ plug in. To install and use this plug-in, please see its specific manual: https://library.qiime2.org/plugins/q2-itsxpress/8/

Depending on your experimental design, you may have to perform the trimming of the PCR primer, sequencing adapters and/or using the conserved region using the ‘itsxpress’ trimming only.

## Cutadapt: MCQs
```{r, fig.align = 'center',out.width= '15%', echo=FALSE }
knitr::include_graphics(path = "figures/question_bubble_black.png", auto_pdf = TRUE)
```

```{r, echo = FALSE}
opts_p <- c("1TE", "2K2E", answer="3K1E")
```
1. which sample has the lowest number of forward reads? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c("1TE", answer="2K2E", "3K1E")
```
2. Which sample has the highest number of forward reads? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c("<200", "200-220", answer=">220")
```
3. Approximately, at which base position do you see a drastic drop of quality in the forward reads (thick bars drop below Q20)? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c("<200", "200-220", answer=">220")
```
4. Approximately, at which base position do you see a drastic drop of quality in the reverse reads (thick bars drop below Q20)? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c(answer="226", "230", "250")
```
5. What is the median length of the forward reads?

## Cutadapt: summary
```{r, fig.align = 'center',out.width= '15%', echo=FALSE }
knitr::include_graphics(path = "figures/sum_black.png", auto_pdf = TRUE)
```

We have trimmed the adapters from our sequences. This has made the majority of reads shorter going from a length of 250 to >=230. This is expected. We have alos kept a good amount of reads and the quality looks good so we can move to denoising.