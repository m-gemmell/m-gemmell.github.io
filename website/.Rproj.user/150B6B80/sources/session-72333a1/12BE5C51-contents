# ASV taxonomic assignment {#taxa}
<center>
![](figures/classification.png){style="width:200px"}
</center>

Now that we have defined the sequence variants in the samples, this chapter will show you how to carry out taxonomic classification using [Greengenes2](https://www.nature.com/articles/s41587-023-01845-1). 

__Links__

- Information on its use can be found in the following `QIIME2` forum post from one of the Greengenes2 developers: https://forum.qiime2.org/t/introducing-greengenes2-2022-10/25291
- Announcement of Greengenes2 2024.9: https://forum.qiime2.org/t/greengenes2-2024-09/31606

## Greengenes2 database
<center>
![](figures/green_jeans.png){style="width:150px"}
</center>

Greengenes2 is a database containing quality-controlled microbial sequence data. It consists of a single massive reference tree that contains taxonomic and sequence information. The current version (2024.9) was created by combining:

- [Genome Taxonomy DataBase (GTDB)](https://gtdb.ecogenomic.org/)
  - Release 220, 24th April 2024
  - __596,859__ bacterial and archaeal genomes
- [Living Tree Project (LTP)](https://imedea.uib-csic.es/mmg/ltp/)
  - Release 08 2023
  -  Greengenes2 uses the full length 16S sequences from LTP
  - Includes mitochondria and chloroplast
  
[Greengenes2 v2022.10 phylogenetic tree](https://www.nature.com/articles/s41587-023-01845-1/figures/1)
<center>
![](figures/greengenes2_phylogeny_tree.png){style="width:600px"}
</center>

Greengenes2 can be used on shotgun metagenomic data. This can allow you to effectively compare taxonomic data from 16S and Shotgun metagenomic datasets. [Tutorial on classifying shotgun metageonimc data with Greengenes2](https://forum.qiime2.org/t/introducing-greengenes2-2022-10/25291#if-you-have-shotgun-metagenomic-data-6).

For your future analysis you can download the databases files from their [ftp site](https://ftp.microbio.me/greengenes_release/2024.09/). However it is also good to check [this site page](http://ftp.microbio.me/greengenes_release/) to see if they have a more recent version when you are analysing your data.

`r hide("Download database files in linux terminal")`
You can download the 2 files you need for Greengenes2 taxonomic classification with the following commands.
```{bash, eval=FALSE}
wget https://ftp.microbio.me/greengenes_release/2024.09/2024.09.backbone.full-length.fna.qza
wget https://ftp.microbio.me/greengenes_release/2024.09/2024.09.backbone.tax.qza
```
Remember to first check if 2024.09 is the most recent version before downloading and using it for your own research.
`r unhide()`

## Extract 16s region of interest
<center>
![](figures/scissor_cut.png){style="width:150px"}
</center>

A classifier training step is required to reach optimum assignment performance.

Prior to training we will extract our 16S region of interest. This is carried out by using the amplicon primer sequences. These are the same we used for [removing the PCR primer](#pcrtrim).

__Note__: Do not run the below command for this tutorial as it will take a long time. See `cp` command further down.

```{bash, eval=FALSE}
qiime feature-classifier extract-reads \
--i-sequences /pub14/tea/nsc206/NEOF/16s_workshop/greengenes2/2024.09.backbone.full-length.fna.qza \
--p-f-primer NNNNNGTGCCAGCMGCCGCGGTAA \
--p-r-primer GGACTACHVGGGTWTCTAAT \
--p-trunc-len 250 \
--o-reads gg2-v4.ref.seqs.qza \
--p-n-jobs 12
```

`r hide("Silva 16S rRNA database")`
Another popular 16S rRNA database is [Silva](https://www.arb-silva.de/).

You can download the required files for taxonomic classification from [here](https://docs.qiime2.org/2024.10/data-resources/#silva-16s-18s-rrna).
`r unhide()`

#### Parameters{-}
<center>
![](figures/parameter_red.png){style="width:100px"}
</center>

- __`--i-sequences`__: Input artifact containing the feature sequence data.
  - In this case we are using the full length 16S rRNA sequences that are used within the Greenegenes2 phylogenomic tree.
  - This was downloaded from https://ftp.microbio.me/greengenes_release/2024.09/2024.09.backbone.full-length.fna.qza.
- __`--p-front-f`__: Sequence for the forward primer (`f`). The sequence is ligated to the 5 prime end (`front`), this is normal. 
- __`--p-front-r`__: Sequence for the reverse primer (`r`). The sequence is ligated to the 5 prime end (`front`), this is normal.
- __`--p-trunc-len`__: This cuts the forward and left reads we are creating to the specified truncation length.
  - We are using `250` as this was the initial length of our Illumina reads.
- __`--o-reads`__: The output read artifact containing our extracted 16S region as paired reads. This is needed for classifier training.
- __`--p-n-jobs`__: Number of separate processes to use.

[QIIME2 docs on `qiime feature-classifier extract-reads`](https://docs.qiime2.org/2024.10/plugins/available/feature-classifier/extract-reads/)

#### Copy premade results {-}

Given that the above command may require more than 14h to finish, we wonâ€™t be able to run it on this occasion. Copy over the pre-made results with the following command:

```{bash, eval=FALSE}
cp /pub14/tea/nsc206/NEOF/16s_workshop/greengenes2/gg2-v4.ref.seqs.qza .
```

## Classifier training
<center>
![](figures/train.png){style="width:150px"}
</center>

Now we train the classifier on this set of extracted reads (approx. 25 mins). 

This uses Naive Bayes which is a very complicated algorithm. Thankfully we don't need to know how it works so we won't explain it here.

__Note__: You can run the code or copy a pre-made file.

```{bash, eval=FALSE}
qiime feature-classifier fit-classifier-naive-bayes \
--i-reference-reads gg2-v4.ref.seqs.qza \
--i-reference-taxonomy /pub14/tea/nsc206/NEOF/16s_workshop/greengenes2/2022.10.backbone.tax.qza \
--o-classifier gg2-v4.classifier.trained.qza
```

Copy pre-made file if you didn't run the code above.

```{bash, eval=FALSE}
cp /pub14/tea/nsc206/NEOF/16s_workshop/greengenes2/gg2-v4.classifier.trained.qza .
```

#### Parameters{-}
<center>
![](figures/parameter_green.png){style="width:100px"}
</center>

- __`--i-reference-reads`__: Input artifact containing the extracted 16S region as paired reads.
- __`--i-reference-taxonomy`__: Input artifact containing the taxonomy information of the features.
  - This was downloaded from: https://ftp.microbio.me/greengenes_release/2024.09/2024.09.backbone.tax.qza.
- __`--o-classifier`__: Output artifact containing the trained classifier. This will be used for feature (ASV) taxonomy classification.

[QIIME2 docs on `qiime feature-classifier fit-classifier-naive-bayes`](https://docs.qiime2.org/2024.10/plugins/available/feature-classifier/fit-classifier-naive-bayes/)

## Taxonomy assignment
<center>
![](figures/classification.png){style="width:150px"}
</center>

With our trained classifier we can assign taxonomic assignments to the ASV representative sequences.

```{bash, eval=FALSE}
qiime feature-classifier classify-sklearn \
--i-classifier gg2-v4.classifier.trained.qza \
--p-confidence 0.7 \
--i-reads rep-seqs-dada2.qza \
--o-classification taxonomy.sklearn.qza \
--p-n-jobs 12
```

#### Parameters{-}
<center>
![](figures/parameter_orange.png){style="width:100px"}
</center>

- __`--i-classifier`__: Input artifact containing the trained classifier.
- __`--p-confidence`__: Confidence threshold for limiting taxonomic depth.
  - We are using 0.7 as it is the default.
  - Each taxonomic level must reach a confidence level of <= 0.7 to be classified.
  - This could cause an ASV to be classified to Genus level but not species level as the species level assignment had a confidence of <0.7 whilst the confidence of the genus and higher assignments was >=0.7.
- __`--i-reads`__: Input artifact containing the representative sequences of the features (ASVs) to be classified.
- __`--o-classification`__: Output artifact containing the taxonomic assignments of the features (ASVs).
- __`--p-n-jobs`__: Number of separate processes to use.

[QIIME2 docs on `qiime feature-classifier classify-sklearn`](https://docs.qiime2.org/2024.10/plugins/available/feature-classifier/classify-sklearn/)

## Taxonomy bar chart production {#taxabar}
<center>
![](figures/bar_charts.png){style="width:150px"}
</center>

Create a taxonomy-abundance bar-chart visualisation artifact:

```{bash, eval=FALSE}
qiime taxa barplot \
--i-table table-dada2.qza \
--i-taxonomy taxonomy.sklearn.qza \
--m-metadata-file metadata.file.txt \
--o-visualization taxa-bar-plots.dada2.qzv
```

#### Parameters{-}
<center>
![](figures/parameter_blue.png){style="width:100px"}
</center>

- __`--i-table`__: Input artifact containing the ASV abundance table.
- __`--i-taxonomy`__: Input artifact containing the taxonomic classifications of the ASVs.
- __`--m-metadata-file`__: [Metadata file](#metadata.file.txt) for our samples.
- __`--o-visualization`__: Output visualisation file containing an interactive taxonomy-abundance bar-chart.

The visualisation consists of an interactive taxonomy bar chart. You can specify the taxonomic level to look at, as well as a few sorting and colouring options. Experiment with it and then continue to the MCQ section.

[QIIME2 docs on `qiime taxa barplot`](https://docs.qiime2.org/2024.10/plugins/available/taxa/barplot/)

## Taxonomy: MCQs
<center>
![](figures/question_bubble_blue.png){style="width:150px"}
</center>

Attempt the below MCQs.

```{r, echo = FALSE}
opts_p <- c(answer="__Moraxellaceae__", "__Mycobacteriaceae__","__Pseudomonadaceae__")
```
1. At taxonomic level 5, what is the taxon with the highest relative abundance across all the samples? (Note: taxa are ordered form most to least abundant in the legend) `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c("__Moraxellaceae__", answer="__Mycobacteriaceae__", "__Pseudomonadaceae__")
```
2. At taxonomic level 5, what is the most abundant taxon for sample 1TE?  `r longmcq(opts_p)`

__Note__: The "Sort Samples By" drop down will be useful for the following questions. Additionally, switching the "Ascending" (low to high, right sample has the highest relative abundance) drop down to "Descending" may be useful.

```{r, echo = FALSE}
opts_p <- c("__1K2E__", answer="__1TM__", "__3TM__")
```
3. Which sample has the highest relative abundance of the class Actinomycetes (Taxonomic level 3)? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c(answer="__1K2E__", "__1TM__", "__3TM__")
```
4. Which sample has the lowest relative abundance of the genus Corynebacterium (Taxonomic level 6)? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c("__1K2E__", "__1TM__", answer="__3TM__")
```
5. Which sample has the third highest relative abundance of the phylum Bacteroidota (Taxonomic level 2)? `r longmcq(opts_p)`

## Taxonomy: summary
<center>
![](figures/sum_blue.png){style="width:150px"}
</center>

We have trimmed and denoised our data, producing ASVs. This has been followed by assigning taxonomic classifications to the ASVs. 

In your future analysis if you have sequenced any samples with known composition (e.g. mock community), now is the time to see if they behave as expected. Do they contain what you expect? You may want to change some steps and/or settings of what you have done so far if the composition does not match what you expect. For example, change the de-noising tool or apply more quality filters to further improve the quality of the sequence under examination.

We are close to carrying out some biodiversity analysis. Before this we will produce a phylogenetic tree in the next chapter.

[QIIME2 documents on training feature classifiers](https://docs.qiime2.org/2024.10/tutorials/feature-classifier/)